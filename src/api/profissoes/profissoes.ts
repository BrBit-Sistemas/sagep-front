import type { BodyType } from '../../lib/axios';
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * SAGEP Core API
 * OpenAPI spec version: 1.0
 */
import type {
  ReadProfissaoDto,
  CreateProfissaoDto,
  UpdateProfissaoDto,
  PaginateProfissaoDto,
  ProfissaoControllerFindAllParams,
} from '../generated.schemas';

import { customInstance } from '../../lib/axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getProfissoes = () => {
  /**
   * @summary Criar uma nova profiss√£o
   */
  const create = (
    createProfissaoDto: BodyType<CreateProfissaoDto>,
    options?: SecondParameter<typeof customInstance>
  ) =>
    customInstance<ReadProfissaoDto>(
      {
        url: `/profissoes`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createProfissaoDto,
      },
      options
    );
  /**
   * @summary Listar todas as profiss√µes
   */
  const findAll = (
    params?: ProfissaoControllerFindAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<PaginateProfissaoDto>({ url: `/profissoes`, method: 'GET', params }, options);
  /**
   * @summary Buscar uma profiss√£o pelo ID
   */
  const findOne = (id: string, options?: SecondParameter<typeof customInstance>) =>
    customInstance<ReadProfissaoDto>({ url: `/profissoes/${id}`, method: 'GET' }, options);
  /**
   * @summary Atualizar uma profiss√£o pelo ID
   */
  const update = (
    id: string,
    updateProfissaoDto: BodyType<UpdateProfissaoDto>,
    options?: SecondParameter<typeof customInstance>
  ) =>
    customInstance<ReadProfissaoDto>(
      {
        url: `/profissoes/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: updateProfissaoDto,
      },
      options
    );
  /**
   * @summary Remover uma profiss√£o pelo ID
   */
  const remove = (id: string, options?: SecondParameter<typeof customInstance>) =>
    customInstance<void>({ url: `/profissoes/${id}`, method: 'DELETE' }, options);
  return { create, findAll, findOne, update, remove };
};
export type CreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getProfissoes>['create']>>
>;
export type FindAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getProfissoes>['findAll']>>
>;
export type FindOneResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getProfissoes>['findOne']>>
>;
export type UpdateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getProfissoes>['update']>>
>;
export type RemoveResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getProfissoes>['remove']>>
>;
