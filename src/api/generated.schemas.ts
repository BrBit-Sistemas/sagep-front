/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * SAGEP Core API
 * OpenAPI spec version: 1.0
 */
export interface LoginDto {
  /** Email do usuário */
  email: string;
  /** Senha do usuário */
  senha: string;
}

export interface LoginResponseDto {
  /** Token de acesso JWT */
  accessToken: string;
  /** Tipo de token */
  tokenType: string;
  /** ID do usuário autenticado */
  userId: string;
}

export interface Secretaria {
  /** Data de criação do registro */
  createdAt: string;
  /** Data da última atualização do registro */
  updatedAt: string;
  /** Data de exclusão do registro (soft delete) */
  deletedAt: string;
  /** ID único da secretaria */
  id: string;
  /** Nome da secretaria */
  nome: string;
}

export interface Regional {
  /** Data de criação do registro */
  createdAt: string;
  /** Data da última atualização do registro */
  updatedAt: string;
  /** Data de exclusão do registro (soft delete) */
  deletedAt: string;
  /** ID da regional */
  id: string;
  /** ID da secretaria */
  secretariaId: string;
  /** Nome da regional */
  nome: string;
}

export interface UnidadePrisional {
  /** Data de criação do registro */
  createdAt: string;
  /** Data da última atualização do registro */
  updatedAt: string;
  /** Data de exclusão do registro (soft delete) */
  deletedAt: string;
  /** ID da unidade prisional */
  id: string;
  /** Nome da unidade prisional */
  nome: string;
  /** ID da secretaria */
  secretariaId: string;
  /** ID da regional */
  regionalId: string;
}

export interface ReadUsuarioDto {
  /** Data de criação do registro */
  createdAt: string;
  /** Data de atualização do registro */
  updatedAt: string;
  /** Data de exclusão do registro */
  deletedAt: string;
  /** ID único do usuário */
  id: string;
  /** Nome completo do usuário */
  nome: string;
  /** Email do usuário */
  email: string;
  /** Foto do usuário */
  avatarUrl?: string;
  /** Secretaria do usuário */
  secretaria: Secretaria;
  /** Regional do usuário */
  regional: Regional;
  /** Unidade prisional do usuário */
  unidade: UnidadePrisional;
  /** Senha do usuário */
  senha: string;
  /** Papéis do usuário */
  roles: string[];
  /** Se o usuário é administrador */
  isAdmin: boolean;
}

export interface PaginateRolesDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: string[];
}

export interface CreateUsuarioDto {
  /** Nome completo do usuário */
  nome: string;
  /** Email do usuário */
  email: string;
  /**
   * Senha do usuário
   * @minLength 8
   * @maxLength 30
   */
  senha: string;
  /** ID da secretaria do usuário */
  secretariaId: string;
  /** ID da regional do usuário */
  regionalId: string;
  /** ID da unidade prisional do usuário */
  unidadeId: string;
}

export interface PaginateUsuarioDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: ReadUsuarioDto[];
}

export interface UpdateUsuarioDto {
  /** Nome completo do usuário */
  nome?: string;
  /** Email do usuário */
  email?: string;
  /**
   * Senha do usuário
   * @minLength 8
   * @maxLength 30
   */
  senha?: string;
  /** ID da secretaria do usuário */
  secretariaId?: string;
  /** ID da regional do usuário */
  regionalId?: string;
  /** ID da unidade prisional do usuário */
  unidadeId?: string;
}

export interface CreateSecretariaDto {
  /** Nome da secretaria */
  nome: string;
}

export interface ReadSecretariaDto {
  /** ID único da secretaria */
  id: string;
  /** Nome da secretaria */
  nome: string;
  /** Data de criação */
  createdAt: string;
  /** Data de atualização */
  updatedAt: string;
  /** Regionais vinculadas à secretaria */
  regionais?: Regional[];
  /** Unidades prisionais vinculadas à secretaria */
  unidades?: UnidadePrisional[];
}

export interface PaginateSecretariaDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: ReadSecretariaDto[];
}

export interface UpdateSecretariaDto {
  /** Nome da secretaria */
  nome?: string;
}

export interface CreateUnidadePrisionalDto {
  /** Nome da unidade prisional */
  nome: string;
  /** ID da regional */
  regionalId: string;
}

export interface ReadRegionalDto {
  /** ID da regional */
  id: string;
  /** ID da secretaria */
  secretariaId: string;
  /** Nome da regional */
  nome: string;
  /** Data de criação */
  createdAt: string;
  /** Data de atualização */
  updatedAt: string;
  /** Secretaria vinculada */
  secretaria?: ReadSecretariaDto;
  /** Unidades prisionais vinculadas à regional */
  unidades?: UnidadePrisional[];
}

export interface ReadUnidadePrisionalDto {
  /** ID da unidade prisional */
  id: string;
  /** Nome da unidade prisional */
  nome: string;
  /** ID da secretaria */
  secretariaId: string;
  /** ID da regional */
  regionalId: string;
  /** Data de criação */
  createdAt: string;
  /** Data de atualização */
  updatedAt: string;
  /** Secretaria vinculada */
  secretaria?: ReadSecretariaDto;
  /** Regional vinculada */
  regional?: ReadRegionalDto;
}

export interface PaginateUnidadePrisionalDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: ReadUnidadePrisionalDto[];
}

export interface UpdateUnidadePrisionalDto {
  /** Nome da unidade prisional */
  nome?: string;
  /** ID da regional */
  regionalId?: string;
}

export interface CreateRegionalDto {
  /** Nome da regional */
  nome: string;
  /** ID da secretaria */
  secretariaId: string;
}

export interface PaginateRegionalDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: ReadRegionalDto[];
}

export interface UpdateRegionalDto {
  /** Nome da regional */
  nome?: string;
  /** ID da secretaria */
  secretariaId?: string;
}

export interface CreateProfissaoDto {
  /** Nome da profissão */
  nome: string;
  /** Descrição da profissão */
  descricao?: string;
  /** Status ativo da profissão */
  ativo?: boolean;
}

export interface ReadProfissaoDto {
  /** ID da profissão */
  id: string;
  /** Nome da profissão */
  nome: string;
  /** Descrição da profissão */
  descricao?: string;
  /** Status ativo da profissão */
  ativo: boolean;
  /** Data de criação */
  createdAt: string;
  /** Data de atualização */
  updatedAt: string;
}

export interface UpdateProfissaoDto {
  /** Nome da profissão */
  nome?: string;
  /** Descrição da profissão */
  descricao?: string;
  /** Status ativo da profissão */
  ativo?: boolean;
}

export interface PaginateProfissaoDto {
  /** Total de páginas */
  totalPages: number;
  /** Número da página */
  page: number;
  /** Limite de itens por página */
  limit: number;
  /** Total de itens */
  total: number;
  /** Se há uma página posterior */
  hasNextPage: boolean;
  /** Se há uma página anterior */
  hasPrevPage: boolean;
  /** Itens da página */
  items: ReadProfissaoDto[];
}

/**
 * @nullable
 */
export type HealthControllerCheck200Info = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
} | null;

/**
 * @nullable
 */
export type HealthControllerCheck200Error = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
} | null;

export type HealthControllerCheck200Details = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
};

export type HealthControllerCheck200 = {
  status?: string;
  /** @nullable */
  info?: HealthControllerCheck200Info;
  /** @nullable */
  error?: HealthControllerCheck200Error;
  details?: HealthControllerCheck200Details;
};

/**
 * @nullable
 */
export type HealthControllerCheck503Info = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
} | null;

/**
 * @nullable
 */
export type HealthControllerCheck503Error = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
} | null;

export type HealthControllerCheck503Details = {
  [key: string]: {
    status: string;
    [key: string]: unknown;
  };
};

export type HealthControllerCheck503 = {
  status?: string;
  /** @nullable */
  info?: HealthControllerCheck503Info;
  /** @nullable */
  error?: HealthControllerCheck503Error;
  details?: HealthControllerCheck503Details;
};

export type AuthControllerPaginateRolesParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export type UsuarioControllerPaginateParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export type SecretariaControllerFindAllParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export type UnidadePrisionalControllerFindAllParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export type RegionalControllerFindAllParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export type ProfissaoControllerFindAllParams = {
  /**
   * Número da página
   * @minimum 0
   */
  page?: number;
  /**
   * Quantidade de itens por página
   * @minimum 1
   */
  limit?: number;
  /**
   * Filtro para a busca
   */
  search?: string;
};

export interface CreateFichaCadastralDto {
  detento_id: string;
  nome: string;
  cpf: string;
  rg: string;
  rg_expedicao: string;
  rg_orgao_uf: string;
  data_nascimento: string;
  naturalidade: string;
  naturalidade_uf: string;
  filiacao_mae: string;
  filiacao_pai?: string;
  regime: string;
  unidade_prisional: string;
  prontuario: string;
  sei?: string;
  cidade_processo?: string;
  endereco: string;
  regiao_administrativa: string;
  telefone?: string;
  escolaridade: string;
  tem_problema_saude: boolean;
  problema_saude?: string;
  regiao_bloqueada?: string;
  experiencia_profissional?: string;
  fez_curso_sistema_prisional?: string;
  ja_trabalhou_funap: boolean;
  ano_trabalho_anterior?: string;
  profissao_01?: string;
  profissao_02?: string;
  declaracao_veracidade: boolean;
  responsavel_preenchimento?: string;
  assinatura?: string;
  data_assinatura?: string;
  site_codigo?: string;
  rodape_num_1?: string;
  rodape_num_2?: string;
  rodape_sei?: string;
  pdf_path: string;
}

export interface UpdateFichaCadastralDto extends Partial<CreateFichaCadastralDto> {}

export interface ReadFichaCadastralDto extends CreateFichaCadastralDto {
  fichacadastral_id: string;
  createdAt: string;
  updatedAt: string;
  created_by: string;
  updated_by: string;
}
