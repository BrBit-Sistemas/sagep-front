import type { BodyType } from '../../lib/axios';
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * SAGEP Core API
 * OpenAPI spec version: 1.0
 */
import type {
  ReadSecretariaDto,
  CreateSecretariaDto,
  UpdateSecretariaDto,
  PaginateSecretariaDto,
  SecretariaControllerFindAllParams,
} from '../generated.schemas';

import { customInstance } from '../../lib/axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getSecretarias = () => {
  /**
   * @summary Criar uma nova secretaria
   */
  const create = (
    createSecretariaDto: BodyType<CreateSecretariaDto>,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<ReadSecretariaDto>(
      {
        url: `/secretarias`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createSecretariaDto,
      },
      options
    );
  /**
   * @summary Listar todas as secretarias
   */
  const findAll = (
    params?: SecretariaControllerFindAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<PaginateSecretariaDto>(
      { url: `/secretarias`, method: 'GET', params },
      options
    );
  /**
   * @summary Buscar uma secretaria pelo ID
   */
  const findOne = (id: string, options?: SecondParameter<typeof customInstance>) => customInstance<ReadSecretariaDto>({ url: `/secretarias/${id}`, method: 'GET' }, options);
  /**
   * @summary Atualizar uma secretaria pelo ID
   */
  const update = (
    id: string,
    updateSecretariaDto: BodyType<UpdateSecretariaDto>,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<ReadSecretariaDto>(
      {
        url: `/secretarias/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: updateSecretariaDto,
      },
      options
    );
  /**
   * @summary Remover uma secretaria pelo ID
   */
  const remove = (id: string, options?: SecondParameter<typeof customInstance>) => customInstance<void>({ url: `/secretarias/${id}`, method: 'DELETE' }, options);
  return { create, findAll, findOne, update, remove };
};
export type CreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSecretarias>['create']>>
>;
export type FindAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSecretarias>['findAll']>>
>;
export type FindOneResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSecretarias>['findOne']>>
>;
export type UpdateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSecretarias>['update']>>
>;
export type RemoveResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSecretarias>['remove']>>
>;
