import type { BodyType } from '../../lib/axios';
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * SAGEP Core API
 * OpenAPI spec version: 1.0
 */
import type {
  ReadRegionalDto,
  CreateRegionalDto,
  UpdateRegionalDto,
  PaginateRegionalDto,
  RegionalControllerFindAllParams,
} from '../generated.schemas';

import { customInstance } from '../../lib/axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getRegionais = () => {
  /**
   * @summary Criar uma nova regional
   */
  const create = (
    createRegionalDto: BodyType<CreateRegionalDto>,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<ReadRegionalDto>(
      {
        url: `/regionais`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createRegionalDto,
      },
      options
    );
  /**
   * @summary Listar todas as regionais de uma secretaria
   */
  const findAll = (
    params?: RegionalControllerFindAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<PaginateRegionalDto>(
      { url: `/regionais`, method: 'GET', params },
      options
    );
  /**
   * @summary Buscar uma regional pelo ID
   */
  const findOne = (id: string, options?: SecondParameter<typeof customInstance>) => customInstance<ReadRegionalDto>({ url: `/regionais/${id}`, method: 'GET' }, options);
  /**
   * @summary Atualizar uma regional pelo ID
   */
  const update = (
    id: string,
    updateRegionalDto: BodyType<UpdateRegionalDto>,
    options?: SecondParameter<typeof customInstance>
  ) => customInstance<ReadRegionalDto>(
      {
        url: `/regionais/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: updateRegionalDto,
      },
      options
    );
  /**
   * @summary Remover uma regional pelo ID
   */
  const remove = (id: string, options?: SecondParameter<typeof customInstance>) => customInstance<void>({ url: `/regionais/${id}`, method: 'DELETE' }, options);
  return { create, findAll, findOne, update, remove };
};
export type CreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRegionais>['create']>>
>;
export type FindAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRegionais>['findAll']>>
>;
export type FindOneResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRegionais>['findOne']>>
>;
export type UpdateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRegionais>['update']>>
>;
export type RemoveResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRegionais>['remove']>>
>;
